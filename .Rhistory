set.seed(615)
hist(
rnbinom(
1000,
mu = 4000,
size = 0.001),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
1000,
mu = 0,
size = 0.001),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
1000,
mu = 0,
size = 1),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
1000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2,
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
)
set.seed(615)
hist(
rnbinom(
1000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
1000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
10,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
100,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
hist(
rnbinom(
100000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
)
set.seed(615)
ff <- rnbinom(
100000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial"
set.seed(615)
ff <- rnbinom(
100000,
mu = 0.0109375,
size = (1.040361e-01/0.0109375)^2),
col = "grey50",
xlab = "Read Counts",
main = "Negative Binomial")
set.seed(615)
ff <- rnbinom(100000, mu = 0.0109375, size = (1.040361e-01/0.0109375)^2)
View(ff)
View(as.data.frame(ff))
max(ff)
min(ff)
?mapply
hhh <- Matrix(matrix(0, nrow = 10000, ncol = 10000), sparse = TRUE)
hhh[,1] <- 1:10000
View(hhh)
dim(results$geneMeans)
dim(results$SDs)
dim(results$geneSDs)
dim(results$umis)
View(umis)
try1 <- results$geneMeans[,1]
try2 <- results$geneSDs[,1]
View(as.data.frame(try1))
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/decontaminate.R")
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/check_args.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
source("~/simulambient/R/estimate_params.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
View(results)
dim(geneMeans)
dim(result$geneMeans)
dim(results$geneMeans)
df <- data.frame(a= sample(1:100, 10),b = sample(1:100, 10),c= sample(1:100, 10))
View(df)
df <- data.frame(geneMeans[,1], geneCVs[,1])
colnames(df) <- c("geneMeans", "geneCoeffVars")
df <- data.frame(results$geneMeans[,1], results$geneCVs[,1])
colnames(df) <- c("geneMeans", "geneCoeffVars")
df <- data.frame(results$geneMeans[,1], results$geneSDs[,1])
colnames(df) <- c("geneMeans", "geneCoeffVars")
View(df)
ff <- rnbinom(100000, mu = 0, size = (1.040361e-01/0.0109375)^2))
ff <- rnbinom(100000, mu = 0, size = (1.040361e-01/0.0109375)^2)
View(as.data.frame(ff))
ff <- rnbinom(100000, mu = 0, size = 0)
ff <- rnbinom(100000, mu = 0, size = 1e-10)
View(as.data.frame(ff))
df <- df[,2] + 1e-10
df <- as.data.frame(results$geneMeans, df)
View(df)
df <- as.data.frame(results$geneMeans[,1], results$geneSDs[,1])
View(results)
df <- as.data.frame((results$geneMeans)[,1], (results$geneSDs)[,1])
View(df)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
df <- as.data.frame((results$geneMeans)[,1], (results$geneSDs)[,1])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
View(results)
df <- as.data.frame((results$geneMeans)[,1], (results$geneSDs)[,1])
g <- results$geneMeans[,1]
h <- results$geneSDs[,1]
df <- data.frame((results$geneMeans)[,1], (results$geneSDs)[,1])
View(df)
df[,2] <- df[,2] + 1e-10
function_x <- function(x, y) rnbinom(100000, mu = x, size = y)}
function_x <- function(x, y) rnbinom(100000, mu = x, size = y)
hjhj <- mapply(function_x, df[,1], df[,2])
function_x <- function(x, y) rnbinom(10, mu = x, size = y)
hjhj <- mapply(function_x, df[,1], df[,2])
View(hjhj)
dim(hjhj)
source("~/simulambient/R/simulate_counts.R")
source("~/simulambient/R/simulate_counts.R")
source("~/simulambient/R/check_args.R")
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/decontaminate.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
warnings()
View(umis)
View(results)
View(results$geneMeans)
View(results$metadata)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
num_nuclei_per_metadata <- apply(results$umis, MARGIN = 2, FUN = function(x) length(stats::na.omit(x)))
geneCVs <- ((results$geneSDs + 1e-10) / results$geneMeans)^2
ncol(geneCVs)
df <- data.frame(geneMeans[,1], geneCVs[,1])
df <- data.frame(results$geneMeans[,1], geneCVs[,1])
function_simulate <- function(x, y) stats::rnbinom(numNucleiPerGroup[1], mu = x, size = y)
counts <- mapply(function_simulate, df[,1], df[,2])
function_simulate <- function(x, y) stats::rnbinom(num_nuclei_per_metadata[1], mu = x, size = y)
counts <- mapply(function_simulate, df[,1], df[,2])
View(counts)
source("~/simulambient/R/simulate_counts.R")
source("~/simulambient/R/simulambient.R")
function_simulate <- function(x, y) stats::rnbinom(num_nuclei_per_metadata[1], mu = x, size = y)
results <- simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex)
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
traceback()
source("~/simulambient/R/estimate_params.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
View(results$umis)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
View(as.matrix(results))
Viewdf
View(df)
source("~/simulambient/R/simulate_counts.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
View(as.matrix(results))
ggg <- colSums(results)
ggg
library(profvis)
profvis(simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500]))
profvis(simulambient(dataset = fullgeneDF_10000[,1:5000], contamination = ambient, cellTypes = cellTypes[1:5000], sex = sex[1:5000]))
profvis(simulambient(dataset = fullgeneDF_10000, contamination = ambient, cellTypes = cellTypes, sex = sex))
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/get_umis.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(data.frame(results$umis, results$old_umis))
v <- na.omit(as.vector(results$umis))
v2 <- na.omit(as.vector(results$old_umis))
View(v2)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
?sweep
7135 * (5775 / 7135)
10/0
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
?decontX
source("~/simulambient/R/decontaminate.R")
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient, cellTypes = cellTypes[1:500], sex = sex[1:500])
geneMeans <- results$geneMeans
geneSDs <- results$geneSDs
tol <- 1e-10
geneCVs <- ((geneSDs + tol) / geneMeans)^2
ncol(geneMeans)
numNucleiPerGroup <- apply(results$umis, MARGIN = 2, FUN = function(x) length(stats::na.omit(x)))
df <- data.frame(geneMeans[,1], geneCVs[,1])
function_simulate <- function(x, y) stats::rnbinom(numNucleiPerGroup[i], mu = x, size = y)
counts <- Matrix(t(mapply(function_simulate, df[,1], df[,2])), sparse = TRUE)
function_simulate <- function(x, y) stats::rnbinom(200000, mu = x, size = y)
counts <- Matrix(t(mapply(function_simulate, df[,1], df[,2])), sparse = TRUE)
function_simulate <- function(x, y) stats::rnbinom(2000, mu = x, size = y)
counts <- Matrix(t(mapply(function_simulate, df[,1], df[,2])), sparse = TRUE)
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
length(which(rowSums(fullgeneDF_10000) == 0))
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
library(rlist)
install.packages("rlist")
library(rlist)
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/decontaminate.R")
source("~/simulambient/R/get_umis.R")
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/simulate_counts.R")
source("~/simulambient/R/check_args.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
t <- table(sex)
View(t)
as.data.frame(t)[,2]
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
View(as.matrix(results$ground_truth))
View(as.matrix(results$1))
View(as.matrix(results$`1`))
jjk <- colSums(results$ground_truth)
jjj <- colSums(results$`1`)
hhh <- jjk - jjj
max(hhh)
min(hhh)
View(hhh)
View(as.matrix(hhh))
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
min(el2)
min(results$el2)
max(results$el2)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
View(results$el1)
min(results$el1)
max(results$el1)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500])
View(results)
colSums1 <- colSums(results$ground_truth)
colSums1 <- colSums(results$1)
colSums2 <- colSums(results$`1`)
ggg <- colSums2 - colSums1
View(as.matrix(ggg))
results2 <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500], contamination_levels = 2)
colSums1 <- colSums(results2$ground_truth)
colSums2 <- colSums(results2$`1`)
colSums2 <- colSums(results2$`2`)
ggg2 <- colSums2 - colSums1
View(as.matrix(ggg2))
View(as.matrix(fullgeneDF_10000[,1:500]))
View(as.matrix(ambient[,1:20]))
print(head(sex))
print(head(cellTypes))
print(geneMeans)
View(geneMeans)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500], contamination_levels = 1)
View(results$geneMeans)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500], contamination_levels = 1)
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(dataset = fullgeneDF_10000[,1:500], contamination = ambient[,1:10000], cellTypes = cellTypes[1:500], sex = sex[1:500], contamination_levels = 1)
View(as.matrix(results[,1:40]))
source("~/simulambient/R/simulambient.R")
ggg3 <- data.frame(ggg, ggg2)
View(ggg3)
ggg3 <- data.frame(ggg3[,2] / ggg3[,1])
mean(ggg3)
mean(ggg3[,1])
ggg3 <- data.frame(ggg, ggg2)
?mapply
devtools::document()
rm(list = c("check_args", "decontaminate", "estimate_params"))
devtools::document()
rm(list = c("get_umis", "simulambient", "simulate_counts"))
devtools::document()
load("~/Boehnke-Scott/Data/FullGene/STARsolo/fullgeneDF_sparse.RData")
sce <- SingleCellExperiment(list(counts=counts))
library(SingleCellExperiment)
sce <- SingleCellExperiment(list(counts=counts))
sce <- SingleCellExperiment(list(counts=ambient))
sce <- SingleCellExperiment(list(counts=fullgeneDF[,1:32135]))
names(fullgeneDF)
names(fullgeneDF_10000)
head(colnames(fullgeneDF_10000))
names(counts)
head(colnames(fullgeneDF[,1:32135]))
colnames(counts499) <- as.vector(unlist(colnames(counts499)))
counts499 <- fullgeneDF[,1:32135]
colnames(counts499) <- as.vector(unlist(colnames(counts499)))
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/get_umis.R")
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/simulate_counts.R")
source("~/simulambient/R/decontaminate.R")
source("~/simulambient/R/check_args.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
colnames(ambient)
colnames(ambient) <- as.character(1:ncol(ambient))
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
head(colnames(counts499))
head(rownames(counts499))
head(rownames(ambient))
rownames(counts499) <- rownames(ambient)
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
View(results)
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`50`) - colSums(results$`1`))
View(abc)
936*50
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 50), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`50`) - colSums(results$`1`))
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
View(abc)
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`50`) - colSums(results$`1`))
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$`1`))
mean(abc[,3])
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$`1`))
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
View(abc)
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$`1`))
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
View(abc)
colSums(results$ground_truth)
colSums(results$ground_truth$`1`)
colSums(results$`1`)
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
View(results)
View(data.frame(results$geneMeans, results$geneSDs))
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$`1`))
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
View(abc)
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
View(results)
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
View(results)
head(colSums(results))
dim(results)
View(as.matrix(results))
source("~/simulambient/R/simulambient.R")
source("~/simulambient/R/simulambient.R")
results <- simulambient(counts499[,1:500], contamination_levels = c(1, 2), contamination = ambient[,1:200], cellTypes = nucleiDF$cellTypes[1:500], sex = nucleiDF$sex[1:500])
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$`1`))
abc <- data.frame(abc, abc[,2] / abc[,1])
mean(abc[,3])
View(abc)
mean(abc[-498,3])
anyNA(results$ground_truth)
anyNA(results$`1`)
anyNA(results$`2`)
ncol(ambient)
results <- simulambient(counts499, contamination_levels = c(1, 2, 5, 10), contamination = ambient[,1:60000], cellTypes = nucleiDF$cellTypes[1:32135], sex = nucleiDF$sex[1:32135])
gc()
abc <- data.frame(colSums(results$`1`) - colSums(results$ground_truth), colSums(results$`2`) - colSums(results$ground_truth), colSums(results$`5`) - colSums(results$ground_truth), colSums(results$`10`) - colSums(results$ground_truth))
View(abc)
mean(abc[,2] / abc[,1])
which(is.nan(abc[,1]))
which(is.nan(abc[,2]))
which(abc[,1] == 0)
mean(abc[-which(abc[,1] == 0),2] / abc[-which(abc[,1] == 0),1])
mean(abc[-which(abc[,3] == 0),2] / abc[-which(abc[,1] == 0),1])
mean(abc[-which(abc[,4] == 0),2] / abc[-which(abc[,1] == 0),1])
abc <- data.frame(abc, abc[,2] / abc[,1], abc[,3] / abc[,1])
mean(abc[-which(abc[,1] == 0),2] / abc[-which(abc[,1] == 0),1])
mean(abc[-which(abc[,1] == 0),3] / abc[-which(abc[,1] == 0),1])
mean(abc[-which(abc[,1] == 0),4] / abc[-which(abc[,1] == 0),1])
library(Seurat)
save(counts499, file = "~/simulambient/Data/counts499.RData")
cellTypes499 <- = nucleiDF$cellTypes[1:32135]
cellTypes499 <- nucleiDF$cellTypes[1:32135]
save(cellTypes499, file = "~/simulambient/Data/cellTypes499.RData")
sex499 <- = nucleiDF$sex[1:32135]
sex499 <- nucleiDF$sex[1:32135]
save(sex499, file = "~/simulambient/Data/sex499.RData")
save(results, file = "~/simulated/Data/preliminary_results.RData"
)
save(results, file = "~/simulambient/Data/preliminary_results.RData")
