if (!is.null(batch)) {
unique_batches <- unique(batch)
counts_with_metadata$batch <- unique_batches[counts_with_metadata$batch]
}
if (!is.null(sample)) {
unique_samples <- unique(sample)
counts_with_metadata$sample <- unique_samples[counts_with_metadata$sample]
}
}
tbl <- data.table(metadata_df)[, .N, by = metadata]
return(genes = counts_with_metadata, tbl = tbl, umis = umis)
}
result <- estimate_params(pilot1adipose1000, batch = batch)
View(result)
metadata <- "batch"
metadata_string <- "batch"
metadata_string <- paste("batch", collapse = ",")
counts_with_metadata <- aggregate(eval(parse(text = paste(".~", metadata_string, sep = ""))),
data = counts_with_metadata, FUN = mean)
counts_with_metadata <- result
counts_with_metadata <- aggregate(eval(parse(text = paste(".~", metadata_string, sep = ""))),
data = counts_with_metadata, FUN = mean)
with(counts_with_metadata, rowsum(counts_with_metadata[-1], batch))
tbl <- data.table(metadata_df)[, .N, by = metadata]
View(tbl)
tbl <- data.table(metadata_df)[, lapply(.SD, mean), by = metadata]
tbl <- data.table(metadata_df)[, mean(MALAT1), by = metadata]
View(metadata_df)
tbl <- data.table(counts_with_metadata)[, mean(MALAT1), by = metadata]
counts_with_metadata <- aggregate.Matrix(eval(parse(text = paste(".~", metadata_string, sep = ""))),
data = counts_with_metadata, FUN = mean)
library(Matrix.utils)
install.packages('Matrix.utils')
View(tbl)
metadata_df <- data.frame(cellTypes, batch, sample)
View(metadata_df)
metadata <- c("cellTypes", "batch", "sample")
tbl <- data.table(metadata_df)[, .N, by = metadata]
View(tbl)
which(metadata_df == tbl[1:3])
which(metadata_df[,1:3] == tbl[,1:3])
which(metadata_df[,1:3] == as.data.frame(tbl[,1:3]))
which(metadata_df[,1:3] == as.data.frame(tbl)[,1:3])
as.data.frame(tbl)[,1:3]
tbl <- as.data.frame(tbl)
tbl[1,1]
tbl[,1:3]
head(tbl[,1:3])
head(metadata_df[,1:3])
which(metadata_df[,1:3] == as.data.frame(tbl)[1,1:3])
which(metadata_df[,1:3] == as.data.frame(tbl)[1,1:3])
which(metadata_df[,1] == as.data.frame(tbl)[1,1])
which(metadata_df[,1:3] == as.data.frame(tbl)[1,1:3])
metadata_df <- data.frame(mget(metadata))
metadata_df_concat <- paste(metadata_df)
metadata_df_concat <- within(paste(metadata_df))
metadata_df_concat <- within(paste(metadata_df[,1:3]))
metadata_df_concat <- paste(metadata_df[,1:3], sep = "")
View(metadata_df_concat)
View(as.data.frame(metadata_df_concat))
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], metadata_df[,3] sep = "")
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], metadata_df[,3], sep = "")
?paste0
tbl <- as.data.frame(data.table(metadata_df)[, .N, by = metadata])
if (l == 1) {
metadata_df_concat <- metadata_df[,1]
tbl_concat <- tbl[,1]
} else if (l == 2) {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], sep = "")
} else {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], metadata_df[,3], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], tbl[,3], sep = "")
}
l <- 3
tbl <- as.data.frame(data.table(metadata_df)[, .N, by = metadata])
if (l == 1) {
metadata_df_concat <- metadata_df[,1]
tbl_concat <- tbl[,1]
} else if (l == 2) {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], sep = "")
} else {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], metadata_df[,3], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], tbl[,3], sep = "")
}
match(tbl_concat[1], metadata_df_concat)
which(metadata_df_concat == tbl_concat[1])
which(metadata_df_concat == tbl_concat[36])
genedf <- matrix(NA, ncol = nrow(tbl), nrow = eval(nrow(dataset) + l))
genedf[1:l,] <- t(tbl[,1:l])
genedf <- matrix(NA, ncol = nrow(tbl), nrow = eval(nrow(pilot1adipose1000) + l))
genedf[1:l,] <- t(tbl[,1:l])
View(genedf)
for (i in 1:nrow(tbl)) {
genedf[eval(l+1):eval(nrow(dataset) + l),i] <- rowMeans(dataset[,which(metadata_df_concat == tbl_concat[i])])
}
for (i in 1:nrow(tbl)) {
genedf[eval(l+1):eval(nrow(pilot1adipose1000) + l),i] <- rowMeans(pilot1adipose1000[,which(metadata_df_concat == tbl_concat[i])])
}
View(genedf)
View(metadata_df)
View(tbl)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
#' Estimate Parameters from Dataset
#'
#' estimate_params will take a snRNA-seq dataset as input and estimate parameters for downstream analysis.
#'
#' @param dataset An n x k dataset where n = number of genes and k = number of nuclei. Assumed to be demultiplexed and cell type-annotated.
#'
#' @param cellTypes A vector of length k that provides the cell type of each nucleus in \code{dataset}. If all nuclei are from one type or cell type is not to be accounted for, parameter can be left blank.
#'
#' @param batch A vector of length k that provides the batch of the nucleus in \code{dataset}. If there is no batch effect, parameter can be left blank.
#'
#' @param sample A vector of length k that provides the associated sex of each droplet in \code{dataset}.
#'
#' @return A list containing three values.
#'
#' @export
#'
#' @import Matrix
#' @import data.table
estimate_params <- function(dataset, cellTypes = NULL, batch = NULL, sample = NULL) {
dataset <- as(dataset, "CsparseMatrix") # Convert data to sparse format
num_genes <- nrow(dataset) # How many genes did the user provide in their dataset?
num_nuclei <- ncol(dataset) # How many nuclei did the user provide in their dataset?
metadata <- c() # Vector of strings. Could contain none, "cellTypes", "batch", "sex", or any combination depending on metadata provided by the user.
# Throw error if genes aren't named.
if (is.null(rownames(dataset))) {
stop("Single-nucleus data should have row names to identify genes. Please attribute gene names to data before continuing.")
}
# Throw error if user provides cell type information but cell type labels aren't same length as number of nuclei.
if (!is.null(cellTypes)) {
if (length(cellTypes) != num_nuclei) {
stop("Each nucleus should be assigned to a cell type. The cell type metadata does not match the number of nuclei.")
}
metadata <- c(metadata, "cellTypes")
}
# Throw error if user provides batch effect information but batch labels aren't same length as number of nuclei.
if (!is.null(batch)) {
if (length(batch) != num_nuclei) {
stop("Each nucleus should be assigned to a batch. The batch metadata does not match the number of nuclei.")
}
metadata <- c(metadata, "batch")
}
# Throw error if user provides sample information but labels aren't same length as number of nuclei.
if (!is.null(sample)) {
if (length(sample) != num_nuclei) {
stop("Each nucleus should be assigned to a sample. The sample metadata does not match the number of nuclei.")
}
metadata <- c(metadata, "sample")
}
num_vars <- length(metadata)
print(num_vars)
if (num_vars == 0) {
genedf <- rowMeans(dataset)
names(genedf) <- rownames(dataset)
umis <- colSums(dataset)
return(list(geneMeans = genedf, umis = matrix(umis, nrow = length(umis))))
} else {
metadata_df <- data.frame(mget(metadata))
tbl <- as.data.frame(data.table(metadata_df)[, .N, by = metadata])
if (l == 1) {
metadata_df_concat <- metadata_df[,1]
tbl_concat <- tbl[,1]
} else if (l == 2) {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], sep = "")
} else {
metadata_df_concat <- paste(metadata_df[,1], metadata_df[,2], metadata_df[,3], sep = "")
tbl_concat <- paste(tbl[,1], tbl[,2], tbl[,3], sep = "")
}
genedf <- matrix(NA, ncol = nrow(tbl), nrow = eval(nrow(dataset) + l))
umis <- matrix(NA, ncol = nrow(tbl), nrow = eval(l + max(tbl[,eval(l+1)])))
genedf[1:l,] <- t(tbl[,1:l])
umis[1:l,] <- t(tbl[,1:l])
for (i in 1:nrow(tbl)) {
genedf[eval(l+1):eval(nrow(dataset) + l),i] <- rowMeans(dataset[,which(metadata_df_concat == tbl_concat[i])])
umiVector <- colSums(dataset[,which(metadata_df_concat == tbl_concat[i])])
umis[eval(l+1):eval(l+length(umiVector))] <- umiVector
}
rownames(genedf)[1:l] <- colnames(metadata_df)
rownames(genedf)[eval(l+2):eval(nrow(dataset) + l + 1)] <- rownames(dataset)
return(list(geneMeans = genedf, umis = umis))
}
}
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
traceback()
source("~/simulambient/R/estimate_params.R")
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result)
View(result$genedf)
nrow(result$genedf)
colSums(result$genedf[-c(1:2),1])
colSums(as.numeric(result$genedf[-c(1:2),1]))
sum(as.numeric(result$genedf[-c(1:2),1]))
rownames(result$genedf)[1:2] <- c("abc", "def")
rownames(result$genedf[1:2]) <- c("abc", "def")
head(rownames(result$genedf))
rownames(result$genedf) <- as.character(1:nrow(result$genedf))
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result$geneMeans)
View(result$umis)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result$umis)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result$umis)
View(metadata_df)
View(tbl)
View(unique(metadata_df))
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(unique(metadata_df))
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000, batch = batch, sample = sample)
View(result$umis)
View(result$geneMeans)
result <- estimate_params(pilot1adipose1000)
View(result)
View(result$geneMeans)
View(result$umis)
source("~/simulambient/R/estimate_params.R")
result <- estimate_params(pilot1adipose1000)
devtools::document()
devtools::document()
rm(list = c("estimate_params"))
devtools::document()
devtools::document()
library(celda)
load("~/Boehnke-Scott/Data/FullGene/STARsolo/fullgeneDF_sparse.RData")
ncol(fullgeneDF)
load("~/fusion/Data/nucleiDF.RData")
head(colnames(fullgeneDF))
all(colnames(fullgeneDF) == rownames(nucleiDF))
?sample
random_sample <- sample(1:222549, 10000, replace=F)
length(unique(random_sample))
min(random_sample)
max(random_sample)
fullgeneDF_10000 <- fullgeneDF[,random_sample]
cellTypes <- nucleiDF[random_sample,"cellTypes"]
View(nucleiDF)
head(colSums(fullgeneDF_10000))
batch <- nucleiDF[random_sample,"batch"]
sample <- nucleiDF[random_sample,"samples_list"]
save(batch, file = "~/simulambient/Data/batch.RData")
save(sample, file = "~/simulambient/Data/sample.RData")
save(cellTypes, file = "~/simulambient/Data/cellTypes.RData")
save(fullgeneDF_10000, file = "~/simulambient/Data/counts.RData")
load("~/Boehnke-Scott/Data/soupDF.RData")
View(soupDF)
library(readr)
matrix <- read_table2("/net/csgspare2/spare1/muscle_singlenuclei/snrna_hg19_starsolo_outs/499-NM-1-hg19/GeneFull/raw/matrix.mtx")
View(matrix)
matrix <- matrix[-c(1,2),]
matrix <- matrix[,c(1:3)]
tbl <- table(matrix[,2])
View(tbl)
load("~/adipose/Data/dropletCounts_pilot1_permutation1000_real.RData")
View(dropletCounts_pilot1_permutation1000_real)
library(ggplot2)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = pct_mt)) + geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = pct_mt)) + geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = mt)) + geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + geom_point()
max(dropletCounts_pilot1_permutation1000_real$mt)
max(dropletCounts_pilot1_permutation1000_real$umis)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0998"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
unique(dropletCounts_pilot1_permutation1000_real$sample)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "3854"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4241"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4439"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4942"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
length(which(dropletCounts_pilot1_permutation1000_real$initial_p_val < 0.05)) / nrow(dropletCounts_pilot1_permutation1000_real)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4942"), aes(x = umis, y = -log10(initial_p_val))) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4942"), aes(x = umis, y = -log10(initial_p_val))) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = -log10(initial_p_val))) + scale_x_continuous(limits = c(0, 50000))  +geom_point()
max(-log10(dropletCounts_pilot1_permutation1000_real$initial_p_val))
-log10(0)
?dbinom
View(nucleiDF)
View(dropletCounts_pilot1_permutation1000_real)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12))
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs")
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs")
b <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0998"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs")
b <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0998"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0998") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs")
View(dropletCounts_pilot1_permutation1000_real)
c <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs")
d <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_color_viridis()
library(viridis)
d <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_color_viridis()
d
d <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_fill_viridis()
d
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_fill_viridis(option = "magma")
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
library(MASS)
dropletCounts_pilot1_permutation1000_real$density <- get_density(dropletCounts_pilot1_permutation1000_real$umis, dropletCounts_pilot1_permutation1000_real$pct_mt, n = 100)
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600", color = density), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_fill_viridis(option = "B")
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600", color = density), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_color_viridis(option = "B")
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600", color = density), aes(x = umis, y = mt)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_color_viridis()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600", color = density), aes(x = umis, y = mt)) + scale_color_viridis()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600", color = density), aes(x = umis, y = mt)) + scale_color_viridis() + geom_point()
ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + scale_color_viridis()
dropletCounts_pilot1_permutation1000_real <- dropletCounts_pilot1_permutation1000_real[,1:14]
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "0757")]$density <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "0757"),]$density <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real <- data.frame(dropletCounts_pilot1_permutation1000_real, rep(NA, 5978))
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "0757"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "0757")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "0998"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "0998")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "0998")$pct_mt, n = 100)
unique(dropletCounts_pilot1_permutation1000_real$sample)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "1600"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "1600")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "2773"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "2773")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "3854"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "3854")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "3854")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "4241"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "4241")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "4241")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "4439"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "4439")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "4439")$pct_mt, n = 100)
dropletCounts_pilot1_permutation1000_real[which(dropletCounts_pilot1_permutation1000_real$sample == "4942"),15] <- get_density(subset(dropletCounts_pilot1_permutation1000_real, sample == "4942")$umis, subset(dropletCounts_pilot1_permutation1000_real, sample == "4942")$pct_mt, n = 100)
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none")
a
colnames(dropletCounts_pilot1_permutation1000_real)[15] <- "density"
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none")
a
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis(option = "B")
a
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis(option = "B", direction = -1)
a
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis(option = "A", direction = -1)
a
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis(direction = -1)
a
a <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0757"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0757") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
a
b <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "0998"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 0998") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
c <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
c <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
c <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "1600"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 1600") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
d <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "2773"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 2773") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
e <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "3854"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 3854") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
f <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4241"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 4241") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
g <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4439"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 4439") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
h <- ggplot(subset(dropletCounts_pilot1_permutation1000_real, sample == "4942"), aes(x = umis, y = mt, color = density)) + scale_y_continuous(limits = c(0, 4000)) + scale_x_continuous(limits = c(0, 50000))  +geom_point() + ggtitle("Sample 4942") + theme(text = element_text(size = 10), title = element_text(size = 10), plot.title = element_text(size = 12)) + labs(x = "Total UMIs", y = "MT-mRNA UMIs") + theme(legend.position = "none") + scale_color_viridis()
library(gridExtra)
grid.arrange(a,b,c,d,e,f,g,h, nrow = 2)
grid.arrange(a,b,c,d,e,f,g,h, nrow = 4)
View(matrix)
length(which(tbl$Freq < 100))
tbl <- as.data.frame(tbl)
length(which(tbl$Freq < 100))
aaa <- sample(which(tbl$Freq < 100), 100000)
View(matrix)
matrix2 <- matrix[which(matrix[,2] %in% aaa)]
matrix2 <- matrix[which(matrix[,2] %in% aaa),]
ok <- which(matrix[,2] %in% c(192, 122))
ok <- match(matrix[,2], c(1, 2, 3, 4))
gg <- matrix[,2]
gg <- unlist(gg)
okkk <- which(gg %in% aaa)
head(okkk)
matrix[56,]
min(aaa)
matrix3 <- matrix[okkk,]
View(matrix3)
length(unique(matrix[,2]))
unique(matrix[,2])
jj <- unlist(matrix[,2])
length(unique(jj))
jj <- unlist(matrix3[,2])
length(unique(jj))
aaa <- sample(which(tbl$Freq < 100), 200000)
okkk <- which(gg %in% aaa)
matrix3 <- matrix[okkk,]
jj <- unlist(matrix3[,2])
length(unique(jj))
nrow(fullgeneDF)
max(unlist(matrix3[,1]))
max(unlist(as.numeric(matrix3[,1])))
matrix3[,1] <- as.numeric(matrix3[,1])
matrix3 <- as.data.frame(matrix3)
matrix3[,1] <- as.numeric(matrix3[,1])
max(unlist(as.numeric(matrix3[,1])))
matrix4 <- matrix(0, nrow = 57820, ncol = 65726)
nnn <- unique(matrix[,2])
nnn <- unique(unlist(matrix[,2]))
nnn <- unique(unlist(matrix3[,2]))
gjk <- match(nnn, matrix3[,2])
gjk <- match(matrix3[,2], nnn)
head(gjk)
matrix3[,2] <- gjk
for (i in 1:nrow(matrix3)) {
matrix4[matrix3[i,1], matrix3[i,2]] <- matrix3[i,3]
}
matrix4 <- Matrix(matrix4, sparse = TRUE)
ambient <- matrix4
rownames(ambient) <- rownames(fullgeneDF)
save(ambient, file = "~/simulambient/Data/ambient.RData")
max(colSums(ambient))
colnames(matrix) <- c("gene", "droplet", "count")
tbb <- aggregate(.~droplet, matrix, FUN = sum)
matrix <- as.data.frame(matrix)
matrix[,1] <- as.numeric(matrix[,1])
matrix[,2] <- as.numeric(matrix[,2])
matrix[,3] <- as.numeric(matrix[,3])
tbb <- aggregate(.~droplet, matrix, FUN = sum)
View(tbb)
aaa <- sample(which(tbb$count < 100), 200000)
okkk <- which(gg %in% aaa)
matrix3 <- matrix[okkk,]
View(matrix3)
matrix4 <- matrix(0, nrow = 57820, ncol = 65726)
noofnoof <- unique(matrix3$droplet)
gjk <- match(noofnoof, matrix3[,2])
gjk <- match(matrix3[,2], noofnoof)
head(gjk)
matrix3[,2] <- gjk
for (i in 1:nrow(matrix3)) {
matrix4[matrix3[i,1], matrix3[i,2]] <- matrix3[i,3]
}
max(colSums(matrix4))
rrrr <- tbb[which(tbb$count < 100),1]
head(rrr)
head(rrrr)
aaa <- sample(rrrr, 200000)
matrix4 <- matrix(0, nrow = 57820, ncol = 65726)
okkk <- which(gg %in% aaa)
matrix3 <- matrix[okkk,]
View(matrix3)
noofnoof <- unique(matrix3$droplet)
gjk <- match(matrix3[,2], noofnoof)
matrix3[,2] <- gjk
for (i in 1:nrow(matrix3)) {
matrix4[matrix3[i,1], matrix3[i,2]] <- matrix3[i,3]
}
max(matrix3$droplet)
matrix4 <- matrix(0, nrow = 57820, ncol = 200000)
for (i in 1:nrow(matrix3)) {
matrix4[matrix3[i,1], matrix3[i,2]] <- matrix3[i,3]
}
max(colSums(matrix3))
max(colSums(matrix4))
rownames(matrix4) <- rownames(fullgeneDF)
matrix4 <- Matrix(matrix4, sparse = TRUE)
ambient <- matrix4
save(ambient, file = "~/simulambient/Data/ambient.RData")
save(random_sample, file = "~/simulambient/Data/randomSampleIndices.RData")
load("~/simulambient/Data/ambient.RData")
load("~/simulambient/Data/counts.RData")
load("~/simulambient/Data/cellTypes.RData")
library(celda)
decont <- celda::decontX(x = fullgeneDF_10000, background = ambient, z = cellTypes)
ncol(fullgeneDF_10000)
colnames(fullgeneDF_10000) <- as.character(1:10000)
colnames(ambient) <- as.character(1:200000)
decont <- celda::decontX(x = fullgeneDF_10000, background = ambient, z = cellTypes)
anyNA(rownames(ambient))
length(unique(rownames(ambient)))
names(ambient)
names(fullgeneDF_10000)
library(SingleCellExperiment)
sce1 <- SingleCellExperiment(ambient)
sce1 <- SingleCellExperiment(fullgeneDF_10000)
sce1 <- SingleCellExperiment(as.matrix(fullgeneDF_10000))
gc()
?decontX
sce1 <- SingleCellExperiment(counts = fullgeneDF_10000)
